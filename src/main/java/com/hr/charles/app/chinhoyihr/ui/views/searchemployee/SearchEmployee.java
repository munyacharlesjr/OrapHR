/*
 * %W% %E% Hamza Yasin
 *
 * Copyright (c) 2017-2018 Miranz Technology. All Rights Reserved.
 *
 * This software is the confidential and proprietary information of Miranz
 * technology. You shall not disclose such Confidential Information and 
 * shall use it only in accordance with the terms of the license agreement 
 * you entered into with Miranz.
 *
 */
package com.hr.charles.app.chinhoyihr.ui.views.searchemployee;

import com.hr.charles.app.chinhoyihr.domain.PersonalHandling;
import com.hr.charles.app.chinhoyihr.model.PersonalInfo;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.GroupLayout;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/*
 * @version 1.10 25 Aug 2017
 * @author Hamza Yasin
 */
public class SearchEmployee extends javax.swing.JPanel {

    /**
     * Creates new form SearchEmployee
     */
    DefaultTableModel model;
    public SearchEmployee() {
        initComponents();
        PersonalHandling.Load();
        updateTable(PersonalHandling.getArray());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Sihle Manqele
    private void initComponents() {
        jLabel1 = new JLabel();
        searchTextField = new JTextField();
        jScrollPane1 = new JScrollPane();
        updateEmployeeTable = new JTable();

        //======== this ========
        setBackground(Color.white);
        setBorder ( new javax . swing. border .CompoundBorder ( new javax . swing. border .TitledBorder ( new javax . swing.
        border .EmptyBorder ( 0, 0 ,0 , 0) ,  "JF\u006frmD\u0065sig\u006eer \u0045val\u0075ati\u006fn" , javax. swing .border . TitledBorder. CENTER
        ,javax . swing. border .TitledBorder . BOTTOM, new java. awt .Font ( "Dia\u006cog", java .awt . Font
        . BOLD ,12 ) ,java . awt. Color .red ) , getBorder () ) );  addPropertyChangeListener(
        new java. beans .PropertyChangeListener ( ){ @Override public void propertyChange (java . beans. PropertyChangeEvent e) { if( "\u0062ord\u0065r"
        .equals ( e. getPropertyName () ) )throw new RuntimeException( ) ;} } );

        //---- jLabel1 ----
        jLabel1.setFont(new Font("Tahoma", Font.BOLD, 20));
        jLabel1.setForeground(new Color(0, 102, 204));
        jLabel1.setText("Search Employee");
        jLabel1.setToolTipText("");

        //---- searchTextField ----
        searchTextField.setFont(new Font("Times New Roman", Font.BOLD, 24));
        searchTextField.setHorizontalAlignment(SwingConstants.CENTER);
        searchTextField.setText("Search");
        searchTextField.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                searchTextFieldFocusGained(e);
            }
            @Override
            public void focusLost(FocusEvent e) {
                searchTextFieldFocusLost(e);
            }
        });
        searchTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                searchTextFieldKeyReleased(e);
            }
        });

        //======== jScrollPane1 ========
        {

            //---- updateEmployeeTable ----
            updateEmployeeTable.setModel(new DefaultTableModel(
                new Object[][] {
                },
                new String[] {
                    "ID", "Full Name", "Phone", "Address", "Cnic", "Emergency Name", "Emergency Phone", "Date of Birth", "Email", "Position", "Date of Hiring", "Salary"
                }
            ) {
                Class<?>[] columnTypes = new Class<?>[] {
                    Integer.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, Double.class
                };
                boolean[] columnEditable = new boolean[] {
                    false, false, false, false, false, false, false, false, false, false, false, false
                };
                @Override
                public Class<?> getColumnClass(int columnIndex) {
                    return columnTypes[columnIndex];
                }
                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return columnEditable[columnIndex];
                }
            });
            updateEmployeeTable.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            jScrollPane1.setViewportView(updateEmployeeTable);
        }

        GroupLayout layout = new GroupLayout(this);
        setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup()
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 1031, Short.MAX_VALUE)
                        .addComponent(searchTextField))
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup()
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(78, 78, 78)
                    .addComponent(searchTextField, GroupLayout.PREFERRED_SIZE, 48, GroupLayout.PREFERRED_SIZE)
                    .addGap(41, 41, 41)
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 416, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        if(searchTextField.getText().equals("Search"))
            searchTextField.setText("");
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if(searchTextField.getText().equals(""))
            searchTextField.setText("Search");
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        updateTable(PersonalHandling.search(searchTextField.getText()));
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void updateTable(ArrayList<PersonalInfo> pi1)
    {        
        model = (DefaultTableModel)updateEmployeeTable.getModel();
        model.setRowCount(0);
        for(int i = 0; i < pi1.size(); i++){
        model.insertRow(model.getRowCount(), new Object[]{pi1.get(i).getId(),pi1.get(i).getName(),
                            pi1.get(i).getPhone(), pi1.get(i).getAddress(), pi1.get(i).getCnic(),
                            pi1.get(i).geteName(), pi1.get(i).getePhone(), pi1.get(i).getDob(), 
                            pi1.get(i).getEmail(), pi1.get(i).getPost(), pi1.get(i).getTiming(),
                            pi1.get(i).getSalary()});
                            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Sihle Manqele
    private JLabel jLabel1;
    private JTextField searchTextField;
    private JScrollPane jScrollPane1;
    private JTable updateEmployeeTable;
    // End of variables declaration//GEN-END:variables
}
